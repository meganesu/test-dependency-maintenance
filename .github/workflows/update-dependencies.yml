name: Update Dependencies

env:
  # For using the GitHub CLI:
  GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
  # The branch to commit updates to
  BRANCH_NAME: update-deps

on:
  # Run when changes pushed to main branch (Uncomment for debugging)
  push:
    branches:
      - main
  # schedule:
  #   # Run every day at midnight UTC
  #   - cron: '0 0 * * *'

jobs:
  update_deps:
    if: github.repository_owner == 'meganesu'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # Fetch all branches when checking out the repo
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: 'Check out branch'
        run: |
          git branch --remotes
          echo "*********"

          # Check if a branch already exists with the specified BRANCH_NAME.
          CHECK_BRANCH_OUTPUT=$(git branch --remotes | grep "origin/${BRANCH_NAME}" | wc -l )
          # Strip the spaces from CHECK_BRANCHES_OUTPUT.
          # Will be set to 1 if a matching branch is found, or 0 otherwise.
          DOES_BRANCH_EXIST=${CHECK_BRANCH_OUTPUT// }

          # If it does, check it out
          if [ $DOES_BRANCH_EXIST = 1 ]
          then
            echo "Checking out existing branch: ${BRANCH_NAME}"
            git checkout $BRANCH_NAME
          # If it doesn't, check out a new branch with that name
          else
            echo "Checking out a new branch: ${BRANCH_NAME}"
            git checkout -b $BRANCH_NAME
          fi
      - name: 'Install dependencies'
        run: |
          npm install
          node utils/install-final-dir.js
      - name: 'Update dependencies'
        run: |
          npm update
          node utils/update-deps.js
      - name: 'Commit & push changes'
        id: commit_changes
        run: |
          OUTPUT=$(git status)
          echo $OUTPUT

          # Check if there are unstaged changes to commit
          CHECK_FOR_UNSTAGED_CHANGES=$(echo $OUTPUT | grep "Changes not staged for commit:" | wc -l)
          # Strip the spaces from CHECK_FOR_UNSTAGED_CHANGES.
          # Will be set to 1 if there are changes to be commited, or 0 otherwise.
          UNSTAGED_CHANGES_EXIST=${CHECK_FOR_UNSTAGED_CHANGES// }

          if [ UNSTAGED_CHANGES_EXIST = 1 ]
          then
            # Commit and push changes
            git config user.name github-actions
            git config user.email github-actions@github.com
            git add .
            git commit -m "chore: updated dependencies"
            git push --set-upstream origin update-deps

            # Set an output, to be checked in the next step
            echo "committedChanges=UNSTAGED_CHANGES_EXIST" >> $GITHUB_OUTPUT
          fi
      - name: 'Open pull request'
        # Only run this step if there were changes committed in the previous step
        if: steps.commit_changes.outputs.committedChanges == 1
        run: |
          # Show status of relevant pull requests
          OUTPUT=$(gh pr status)
          echo $OUTPUT

          # Check if a pull request already exists for the current branch (BRANCH_NAME).
          CHECK_FOR_NO_PR=$(echo $OUTPUT | grep "There is no pull request associated with \[$BRANCH_NAME\]" | wc -l )
          # Strip the spaces from CHECK_FOR_NO_PR.
          # Will be set to 1 if no PR is found for the current branch, or 0 if a PR exists.
          NO_PR_EXISTS=${CHECK_FOR_NO_PR// }

          # If there isn't a PR for this branch yet, create one.
          if [ $NO_PR_EXISTS = 1 ]
          then
            echo "Creating a new PR using branch: ${BRANCH_NAME}"
            gh pr create --fill
          fi
